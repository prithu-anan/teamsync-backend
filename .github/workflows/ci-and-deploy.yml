name: CI and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push, not PR

    env:
      AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
      AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
      AZURE_ACCOUNT_NAME: ${{ secrets.AZURE_ACCOUNT_NAME }}
      AZURE_SAS_TOKEN: ${{ secrets.AZURE_SAS_TOKEN }}

    services:
      docker:
        image: docker:24.0.7
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Create Docker network
        run: docker network create teamsync_network || true

      - name: Start PostgreSQL & Flyway via Docker Compose
        run: docker compose up -d

      - name: Wait for DB to be healthy
        run: |
          echo "Waiting for DB to become healthy..."
          for i in {1..10}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' $(docker ps -qf name=db))
            echo "Health status: $STATUS"
            if [ "$STATUS" == "healthy" ]; then
              echo "Database is healthy."
              break
            fi
            sleep 5
          done

      - name: Wait for Flyway to finish migration
        run: |
          echo "Waiting for Flyway to finish..."
          docker compose logs flyway

      - name: Ensure Maven wrapper is executable
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw -B clean package -Dmaven.test.skip=true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: prithuanan/teamsync-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest
    needs: build  # This ensures deploy runs after build completes
    if: github.event_name == 'push'  # Only deploy on push, not PR
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host:     ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     22
          script: |
            cd ~/teamsync/teamsync-backend

            # 1) Pull the latest commits from your repo
            git pull origin master

            # 2) Pull the latest Docker image
            docker pull prithuanan/teamsync-backend:latest

            # 3) Recreate containers with the new image
            AZURE_CONNECTION_STRING=${{ secrets.AZURE_CONNECTION_STRING }} \
            AZURE_CONTAINER_NAME=${{ secrets.AZURE_CONTAINER_NAME }} \
            AZURE_ACCOUNT_NAME=${{ secrets.AZURE_ACCOUNT_NAME }} \
            AZURE_SAS_TOKEN=${{ secrets.AZURE_SAS_TOKEN }} \
            docker compose up -d --build

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Only run tests on PR

    env:
      AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
      AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
      AZURE_ACCOUNT_NAME: ${{ secrets.AZURE_ACCOUNT_NAME }}
      AZURE_SAS_TOKEN: ${{ secrets.AZURE_SAS_TOKEN }}

    services:
      docker:
        image: docker:24.0.7
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Create Docker network
        run: docker network create teamsync_network || true

      - name: Start PostgreSQL & Flyway via Docker Compose
        run: docker compose up -d

      - name: Wait for DB to be healthy
        run: |
          echo "Waiting for DB to become healthy..."
          for i in {1..10}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' $(docker ps -qf name=db))
            echo "Health status: $STATUS"
            if [ "$STATUS" == "healthy" ]; then
              echo "Database is healthy."
              break
            fi
            sleep 5
          done

      - name: Wait for Flyway to finish migration
        run: |
          echo "Waiting for Flyway to finish..."
          docker compose logs flyway

      - name: Ensure Maven wrapper is executable
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw -B clean package -Dmaven.test.skip=true 
